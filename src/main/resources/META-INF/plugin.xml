<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>org.qldmj.demo</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>QldmjPlugin</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="letuseatchicken@163.com" url="https://www.qldmj.com">qldmj-plugin</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[
    Intellij IDEA 插进开发常用组件.<br>
    <em>包含诸多内容：</em>
    <li>行标记：lineMark，代码补全：complete等</li>
  ]]></description>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.java</depends>
    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.json</depends>
    <depends>org.jetbrains.kotlin</depends>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">

        <!-- simple language -->
        <fileType name="Simple File" implementationClass="org.intellij.sdk.language.SimpleFileType" fieldName="INSTANCE"
                  language="Simple" extensions="simple"/>
        <lang.parserDefinition language="Simple"
                               implementationClass="org.intellij.sdk.language.SimpleParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Simple"
                                       implementationClass="org.intellij.sdk.language.SimpleSyntaxHighlighterFactory"/>
        <iconProvider implementation="org.intellij.sdk.language.SimplePropertyIconProvider"/>
        <colorSettingsPage implementation="org.intellij.sdk.language.SimpleColorSettingsPage"/>
        <annotator language="JAVA" implementationClass="org.intellij.sdk.language.SimpleAnnotator"/>
        <codeInsight.lineMarkerProvider language="JAVA"
                                        implementationClass="org.intellij.sdk.language.SimpleLineMarkerProvider"/>
        <completion.contributor language="Simple"
                                implementationClass="org.intellij.sdk.language.SimpleCompletionContributor"/>
        <psi.referenceContributor language="JAVA"
                                  implementation="org.intellij.sdk.language.SimpleReferenceContributor"/>
        <lang.refactoringSupport language="Simple"
                                 implementationClass="org.intellij.sdk.language.SimpleRefactoringSupportProvider"/>
        <lang.findUsagesProvider language="Simple"
                                 implementationClass="org.intellij.sdk.language.SimpleFindUsagesProvider"/>
        <lang.foldingBuilder language="JAVA" implementationClass="org.intellij.sdk.language.SimpleFoldingBuilder"/>
        <gotoSymbolContributor implementation="org.intellij.sdk.language.SimpleChooseByNameContributor"/>
        <lang.psiStructureViewFactory language="Simple"
                                      implementationClass="org.intellij.sdk.language.SimpleStructureViewFactory"/>
        <navbar implementation="org.intellij.sdk.language.SimpleStructureAwareNavbar"/>
        <lang.formatter language="Simple" implementationClass="org.intellij.sdk.language.SimpleFormattingModelBuilder"/>
        <codeStyleSettingsProvider implementation="org.intellij.sdk.language.SimpleCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider
                implementation="org.intellij.sdk.language.SimpleLanguageCodeStyleSettingsProvider"/>
        <lang.commenter language="Simple" implementationClass="org.intellij.sdk.language.SimpleCommenter"/>
        <lang.documentationProvider language="Simple"
                                    implementationClass="org.intellij.sdk.language.SimpleDocumentationProvider"/>
        <spellchecker.support language="Simple"
                              implementationClass="org.intellij.sdk.language.SimpleSpellcheckingStrategy"/>

        <!-- simple language end-->


        <editorActionHandler action="EditorTab" implementationClass="org.qldmj.action.MyEditorKeyTabActon"/>

        <!--        <copyPastePostProcessor implementation="org.qldmj.extend.ConvertSqlToMybatisMapperProcessor"/>-->

        <toolWindow factoryClass="org.qldmj.toolwindow.MyToolWindowFactory" id="My Tool" anchor="right"/>

        <lang.refactoringSupport
                language="JSON"
                implementationClass="org.qldmj.action.refactor.MyCustomRefactoringSupportProvider"/>
        <!--        <refactoring.moveHandler implementation="org.qldmj.action.refactor.MyCustomerMoveHandler"-->
        <!--                                 id="my.customer.move" order="after moveFileOrDir"/>-->


        <lang.elementManipulator forClass="com.intellij.json.psi.JsonProperty"
                                 implementationClass="org.qldmj.json.JsonPropertyManipulator"/>
        <psi.referenceContributor language="JSON"
                                  implementation="org.qldmj.json.JsonPsiReferenceContribute"/>


        <!--refactor-->
        <!--        <renameHandler implementation="org.qldmj.refactor.MyVariableInplaceRenameHandler"/>-->

        <renamePsiElementProcessor implementation="org.qldmj.refactor.MyRenamePsiElementProcessor" order="first"/>
        <fileType name="GF" extensions="gf" fileNames="gf"
                  implementationClass="org.qldmj.file.GFFileType" fieldName="INSTANCE"
                  language="JSON"/>
        <!--        <moveFileHandler implementation=""-->
        <refactoring.moveHandler implementation="org.qldmj.refactor.MyMoveHandlerDelegate" order="first"/>
        <refactoring.moveDirectoryWithClassesHelper
                implementation="org.qldmj.refactor.MyMoveDirectoryWithClassesHelper"/>
    </extensions>

    <actions>

        <group id="qldmj.test.function.action.group" text="Test Action" popup="true">
            <add-to-group group-id="HelpMenu" anchor="last"/>
        </group>

        <action class="org.qldmj.action.test.TestTableBoxCellRendererAction"
                id="test.table.cell.renderer.action">
            <add-to-group group-id="qldmj.test.function.action.group"/>
        </action>

        <action class="org.qldmj.action.test.TestRemoteRunConfigurationAction"
                id="test.remote.run.configuration.action">
            <add-to-group group-id="qldmj.test.function.action.group"/>
        </action>

        <action class="org.qldmj.action.test.TestLoadAnAction"
                id="test.load.action">
            <add-to-group group-id="qldmj.test.function.action.group"/>
        </action>

        <action class="org.qldmj.action.test.TestShowHintAction"
                id="test.show.hint.action">
            <add-to-group group-id="qldmj.test.function.action.group"/>
        </action>

        <action class="org.qldmj.action.test.TestEditorAction" id="test.editor.delay.action">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
        </action>
        <action class="org.qldmj.action.test.TestTextFieldWithAutoCompletionAction"
                id="test.text.field.auto.completion.action">
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
        </action>
        <action class="org.qldmj.action.test.TestHttpChatAction" id="test.http.chat.action">
            <add-to-group group-id="qldmj.test.function.action.group"/>
        </action>

        <!-- refactor -->
        <action class="org.qldmj.action.refactor.CustomRefactorHandlerAction" id="custom.refactor.action"/>

    </actions>
</idea-plugin>